kind: Experiment
metadata:
  namespace: kubeflow
  name: gan3d-demo
spec:
  parallelTrialCount: 1
  maxTrialCount: 1
  maxFailedTrialCount: 1
  objective:
    type: minimize
    goal: 0
    objectiveMetricName: discriminator-train-binary-loss
    additionalMetricNames:
        - generator-train-binary-loss
        - discriminator-train-loss
        - generator-train-loss
        - discriminator-test-loss
        - generator-test-loss
        - train-epoch-time
        - test-epoch-time
  algorithm:
    algorithmName: random
  metricsCollectorSpec:
    source:
      filter:
        metricsFormat:
        - ([\w|-]+)\s*=\s*((-?\d+)(\.\d+)?)
      fileSystemPath:
        path: "/model_outputs/metrics_custom.txt"
        kind: File
    collector:
        kind: File
  parameters:
    - name: --nb_epochs
      parameterType: int
      feasibleSpace:
        min: 5
        max: 5
    - name: --is_full_training
      parameterType: int
      feasibleSpace:
        min: 1
        max: 1
    - name: --use_eos
      parameterType: int
      feasibleSpace:
        min: 0
        max: 0
    - name: --batch_size
      parameterType: int
      feasibleSpace:
        min: 96
        max: 96
    - name: --do_profiling
      parameterType: int
      feasibleSpace:
        min: 0
        max: 0
  trialTemplate:
    goTemplate:
      rawTemplate: |-
        apiVersion: "kubeflow.org/v1"
        kind: TFJob
        metadata:
          name: {{.Trial}}
          namespace: {{.NameSpace}}
        spec:
         tfReplicaSpecs:
          Worker:
            replicas: 2
            restartPolicy: OnFailure
            template:
              spec:
                volumes:
                  - hostPath:
                      path: /var/eos
                      type: ""
                    name: eos
                containers:
                  - name: tensorflow
                    ports:
                    - containerPort: 2222
                      name: tfjob-port
                    resources:
                      limits:
                        nvidia.com/gpu: 1
                    securityContext:
                      runAsUser: 0
                      runAsGroup: 0
                      privileged: true
                    image: registry.hub.docker.com/dejangolubovic/gan3d:demo
                    imagePullPolicy: Always
                    volumeMounts:
                      - mountPath: /eos
                        mountPropagation: HostToContainer
                        name: eos
                    command:
                      - "python3"
                      - "/opt/gan3d_GPU.py"
                      {{- with .HyperParameters}}
                      {{- range .}}
                      - "{{.Name}}={{.Value}}"
                      {{- end}}
                      {{- end}}
